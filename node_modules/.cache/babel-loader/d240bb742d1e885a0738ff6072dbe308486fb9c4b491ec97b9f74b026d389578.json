{"ast":null,"code":"var _s = $RefreshSig$();\nimport './ChessBoard.css';\nimport React, { useState } from 'react';\n//import Chess  from 'chess.js';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst startFEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\nfunction makeChess(fenString) {\n  let board = \"\";\n  const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\n\n  //let i,j;\n  const pieces = Array.from(fenPieces);\n  let counter = 0;\n  let i = 0;\n  console.log(pieces);\n  while (i < pieces.length) {\n    let item = pieces[i];\n    console.log(i, item);\n    let jump = parseInt(item);\n    if (Number.isNaN(jump)) {\n      board += counter === 8 ? item : item + '|';\n      counter++;\n    } else {\n      for (let j = 0; j < jump; j++) {\n        board += counter === 8 ? \" \" : \" |\";\n        counter++;\n      }\n    }\n    if (counter === 8) {\n      board += \"\\n________________\\n\";\n      counter = 0;\n    }\n    i++;\n  }\n  console.log(board);\n  return board;\n}\nfunction ChessBoard() {\n  _s();\n  let [FEN, setFEN] = useState(startFEN);\n  let startChess = makeChess(FEN);\n  let [chess, setChess] = useState(startChess);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: chess\n  }, void 0, false);\n}\n_s(ChessBoard, \"o7hIKtSbwa/ZhSIXkKR1HUOzQ70=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","startFEN","makeChess","fenString","board","fenPieces","split","join","pieces","Array","from","counter","i","console","log","length","item","jump","parseInt","Number","isNaN","j","ChessBoard","_s","FEN","setFEN","startChess","chess","setChess","children","_c","$RefreshReg$"],"sources":["C:/Users/Szymon/Desktop/Frontend/src/Components/ChessBoard/ChessBoard.tsx"],"sourcesContent":["import './ChessBoard.css';\r\nimport React, { useState } from 'react';\r\n//import Chess  from 'chess.js';\r\n\r\nconst startFEN=\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\n\r\nfunction makeChess(fenString:string):string{\r\n    let board:string=\"\";\r\n    const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\r\n\r\n    //let i,j;\r\n    const pieces=Array.from(fenPieces);\r\n    let counter:number=0;\r\n    let i=0;\r\n    console.log(pieces);\r\n    while(i<pieces.length){\r\n        let item=pieces[i];\r\n        console.log(i,item);\r\n        let jump=parseInt(item);\r\n        if(Number.isNaN(jump)){\r\n            board+=counter===8?item:item+'|';\r\n            counter++;\r\n        }else{\r\n            for(let j=0;j<jump;j++){\r\n                board+=counter===8?\" \":\" |\";\r\n                counter++;\r\n            }\r\n        }\r\n        if(counter===8){\r\n            board+=\"\\n________________\\n\";\r\n            counter=0;\r\n        }\r\n        i++;\r\n    }\r\n    console.log(board);\r\n    return board;\r\n}\r\n\r\nfunction ChessBoard()\r\n{\r\n    let [FEN,setFEN]= useState(startFEN);\r\n    let startChess=makeChess(FEN);\r\n    let [chess,setChess] = useState(startChess);\r\n    return <>{chess}</>;\r\n\r\n}\r\n\r\nexport default ChessBoard;"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAC,0DAA0D;AAEzE,SAASC,SAASA,CAACC,SAAgB,EAAQ;EACvC,IAAIC,KAAY,GAAC,EAAE;EACnB,MAAMC,SAAS,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAMC,MAAM,GAACC,KAAK,CAACC,IAAI,CAACL,SAAS,CAAC;EAClC,IAAIM,OAAc,GAAC,CAAC;EACpB,IAAIC,CAAC,GAAC,CAAC;EACPC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,OAAMI,CAAC,GAACJ,MAAM,CAACO,MAAM,EAAC;IAClB,IAAIC,IAAI,GAACR,MAAM,CAACI,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,CAAC,EAACI,IAAI,CAAC;IACnB,IAAIC,IAAI,GAACC,QAAQ,CAACF,IAAI,CAAC;IACvB,IAAGG,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,EAAC;MAClBb,KAAK,IAAEO,OAAO,KAAG,CAAC,GAACK,IAAI,GAACA,IAAI,GAAC,GAAG;MAChCL,OAAO,EAAE;IACb,CAAC,MAAI;MACD,KAAI,IAAIU,CAAC,GAAC,CAAC,EAACA,CAAC,GAACJ,IAAI,EAACI,CAAC,EAAE,EAAC;QACnBjB,KAAK,IAAEO,OAAO,KAAG,CAAC,GAAC,GAAG,GAAC,IAAI;QAC3BA,OAAO,EAAE;MACb;IACJ;IACA,IAAGA,OAAO,KAAG,CAAC,EAAC;MACXP,KAAK,IAAE,sBAAsB;MAC7BO,OAAO,GAAC,CAAC;IACb;IACAC,CAAC,EAAE;EACP;EACAC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,OAAOA,KAAK;AAChB;AAEA,SAASkB,UAAUA,CAAA,EACnB;EAAAC,EAAA;EACI,IAAI,CAACC,GAAG,EAACC,MAAM,CAAC,GAAE7B,QAAQ,CAACK,QAAQ,CAAC;EACpC,IAAIyB,UAAU,GAACxB,SAAS,CAACsB,GAAG,CAAC;EAC7B,IAAI,CAACG,KAAK,EAACC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC8B,UAAU,CAAC;EAC3C,oBAAO1B,OAAA,CAAAF,SAAA;IAAA+B,QAAA,EAAGF;EAAK,gBAAG,CAAC;AAEvB;AAACJ,EAAA,CAPQD,UAAU;AAAAQ,EAAA,GAAVR,UAAU;AASnB,eAAeA,UAAU;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
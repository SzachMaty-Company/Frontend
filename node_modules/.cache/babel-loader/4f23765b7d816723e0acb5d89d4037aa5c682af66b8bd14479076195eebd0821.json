{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Szymon\\\\Desktop\\\\Frontend\\\\src\\\\Components\\\\ChessBoard\\\\ChessBoard.tsx\",\n  _s = $RefreshSig$();\nimport './ChessBoard.css';\nimport React, { useState } from 'react';\nimport { Chess } from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst col = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst ver = [8, 7, 6, 5, 4, 3, 2, 1];\nclass Cell {\n  constructor(pos, piece) {\n    this.pos = void 0;\n    this.piece = void 0;\n    this.pos = pos;\n    this.piece = piece;\n  }\n}\nfunction makeChess(fenString) {\n  let boardd = {};\n  let board = \" \";\n  const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\n\n  //let i,j;\n  let versCounter = 0;\n  const pieces = Array.from(fenPieces);\n  let counter = 0;\n  let i = 0;\n  console.log(pieces);\n  while (i < pieces.length) {\n    let item = pieces[i];\n    let jump = parseInt(item);\n    if (Number.isNaN(jump)) {\n      let key = col[counter] + ver[versCounter];\n      boardd[key] = item;\n      board += counter === 8 ? item : item + '|';\n      counter++;\n    } else {\n      for (let j = 0; j < jump; j++) {\n        let key = col[counter] + ver[versCounter];\n        boardd[key] = \" \";\n        board += counter === 8 ? \" \" : \" |\";\n        counter++;\n      }\n    }\n    if (counter === 8) {\n      board += \"\\n ________________\\n \";\n      versCounter++;\n      counter = 0;\n    }\n    i++;\n  }\n  console.log(boardd);\n  return board;\n}\nfunction ChessBoard() {\n  _s();\n  //Initialised component Chess\n  let [chess, setChess] = useState(new Chess());\n  //Get FEN string\n  let startChess = makeChess(chess.fen());\n  //Set Board\n  let [chessBoard, setChessBoard] = useState(startChess);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board\",\n    children: [cells.map(cell => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: cell.pos\n    }, cell.pos, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n}\n_s(ChessBoard, \"KkWyZXou2u8k4hm5zgRaEO712Ms=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","Chess","jsxDEV","_jsxDEV","col","ver","Cell","constructor","pos","piece","makeChess","fenString","boardd","board","fenPieces","split","join","versCounter","pieces","Array","from","counter","i","console","log","length","item","jump","parseInt","Number","isNaN","key","j","ChessBoard","_s","chess","setChess","startChess","fen","chessBoard","setChessBoard","className","children","cells","map","cell","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Szymon/Desktop/Frontend/src/Components/ChessBoard/ChessBoard.tsx"],"sourcesContent":["import './ChessBoard.css';\r\nimport React, { useState } from 'react';\r\nimport {Chess}  from 'chess.js';\r\nimport { log } from 'console';\r\n\r\nconst col=[\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\r\nconst ver=[8,7,6,5,4,3,2,1]\r\n\r\nclass Cell {\r\n    pos: string;\r\n    piece: string;\r\n    constructor(pos:string, piece:string) {\r\n        this.pos = pos;\r\n        this.piece = piece;\r\n    }\r\n}\r\n\r\nfunction makeChess(fenString:string):string{\r\n    let boardd:{ [key: string]: string } ={};\r\n    let board:string=\" \";\r\n    const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\r\n\r\n    //let i,j;\r\n    let versCounter=0;\r\n    const pieces=Array.from(fenPieces);\r\n    let counter:number=0;\r\n    let i=0;\r\n    console.log(pieces);\r\n    while(i<pieces.length){\r\n        let item=pieces[i];\r\n        let jump=parseInt(item);\r\n        if(Number.isNaN(jump)){\r\n            let key=col[counter]+ver[versCounter];\r\n            boardd[key]=item;\r\n            board+=counter===8?item:item+'|';\r\n            counter++;\r\n        }else{\r\n            for(let j=0;j<jump;j++){\r\n                let key=col[counter]+ver[versCounter];\r\n                boardd[key]=\" \";\r\n                board+=counter===8?\" \":\" |\";\r\n                counter++;\r\n            }\r\n        }\r\n        if(counter===8){\r\n            board+=\"\\n ________________\\n \";\r\n            versCounter++;\r\n            counter=0;\r\n        }\r\n        i++;\r\n    }\r\n    console.log(boardd)\r\n    return board;\r\n}\r\n\r\nfunction ChessBoard()\r\n{\r\n    //Initialised component Chess\r\n    let [chess,setChess]=useState(new Chess());\r\n    //Get FEN string\r\n    let startChess=makeChess(chess.fen());\r\n    //Set Board\r\n    let [chessBoard,setChessBoard] = useState(startChess);\r\n    return <div className=\"board\">\r\n        {cells.map((cell) => (\r\n        <div key={cell.pos}>{cell.pos}</div>\r\n    ))};\r\n</div>;\r\n\r\n}\r\n\r\nexport default ChessBoard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
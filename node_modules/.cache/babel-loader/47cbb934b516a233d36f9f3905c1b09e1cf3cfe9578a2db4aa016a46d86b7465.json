{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Szymon\\\\Desktop\\\\Frontend\\\\src\\\\Components\\\\ChessBoard\\\\ChessBoard.tsx\",\n  _s = $RefreshSig$();\nimport './ChessBoard.css';\nimport React, { useState } from 'react';\n//import Chess  from 'chess.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst startFEN = \"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\nfunction makeChess(fenString) {\n  let board = \"\";\n  const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\n\n  //let i,j;\n  const pieces = Array.from(fenPieces);\n  let counter = 0;\n  let i = 0;\n  console.log(pieces);\n  while (i < pieces.length) {\n    let item = pieces[i];\n    console.log(i, item);\n    let jump = parseInt(item);\n    if (Number.isNaN(jump)) {\n      board = board.concat(board, counter === 8 ? item : item + '|');\n      counter++;\n    } else {\n      for (let j = 0; j < jump; j++) {\n        board = board.concat(board, counter === 8 ? \" \" : \" |\");\n        counter++;\n      }\n    }\n    if (counter === 8) {\n      board = board.concat(board, \"________________\\n\");\n      counter = 0;\n    }\n    i++;\n  }\n  console.log(board);\n  return board;\n}\nfunction ChessBoard() {\n  _s();\n  let [FEN, setFEN] = useState(startFEN);\n  let [chess, setChess] = useState(\"\");\n  setChess(makeChess(FEN));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: chess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 12\n  }, this);\n}\n_s(ChessBoard, \"fAFI6Z1LSLBG/dZqwu2Y9Jt7HhI=\");\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","startFEN","makeChess","fenString","board","fenPieces","split","join","pieces","Array","from","counter","i","console","log","length","item","jump","parseInt","Number","isNaN","concat","j","ChessBoard","_s","FEN","setFEN","chess","setChess","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Szymon/Desktop/Frontend/src/Components/ChessBoard/ChessBoard.tsx"],"sourcesContent":["import './ChessBoard.css';\r\nimport React, { useState } from 'react';\r\n//import Chess  from 'chess.js';\r\n\r\nconst startFEN=\"rnbqkbnr/pppppppp/8/8/8/8/PPPPPPPP/RNBQKBNR w KQkq - 0 1\";\r\n\r\nfunction makeChess(fenString:string):string{\r\n    let board:string=\"\";\r\n    const fenPieces = fenString.split(' ')[0].split('/').join(''); //Get the first portion //remove the row delimiters '/'\r\n\r\n    //let i,j;\r\n    const pieces=Array.from(fenPieces);\r\n    let counter:number=0;\r\n    let i=0;\r\n    console.log(pieces);\r\n    while(i<pieces.length){\r\n        let item=pieces[i];\r\n        console.log(i,item);\r\n        let jump=parseInt(item);\r\n        if(Number.isNaN(jump)){\r\n            board=board.concat(board,counter===8?item:item+'|');\r\n            counter++;\r\n        }else{\r\n            for(let j=0;j<jump;j++){\r\n                board=board.concat(board,counter===8?\" \":\" |\");\r\n                counter++;\r\n            }\r\n        }\r\n        if(counter===8){\r\n            board=board.concat(board,\"________________\\n\");\r\n            counter=0;\r\n        }\r\n        i++;\r\n    }\r\n    console.log(board);\r\n    return board;\r\n}\r\n\r\nfunction ChessBoard()\r\n{\r\n    let [FEN,setFEN]= useState(startFEN);\r\n\r\n    let [chess,setChess] = useState(\"\");\r\n    setChess(makeChess(FEN));\r\n    return <div>\r\n        <p>{chess}</p>\r\n    </div>;\r\n\r\n}\r\n\r\nexport default ChessBoard;"],"mappings":";;AAAA,OAAO,kBAAkB;AACzB,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAC,0DAA0D;AAEzE,SAASC,SAASA,CAACC,SAAgB,EAAQ;EACvC,IAAIC,KAAY,GAAC,EAAE;EACnB,MAAMC,SAAS,GAAGF,SAAS,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE/D;EACA,MAAMC,MAAM,GAACC,KAAK,CAACC,IAAI,CAACL,SAAS,CAAC;EAClC,IAAIM,OAAc,GAAC,CAAC;EACpB,IAAIC,CAAC,GAAC,CAAC;EACPC,OAAO,CAACC,GAAG,CAACN,MAAM,CAAC;EACnB,OAAMI,CAAC,GAACJ,MAAM,CAACO,MAAM,EAAC;IAClB,IAAIC,IAAI,GAACR,MAAM,CAACI,CAAC,CAAC;IAClBC,OAAO,CAACC,GAAG,CAACF,CAAC,EAACI,IAAI,CAAC;IACnB,IAAIC,IAAI,GAACC,QAAQ,CAACF,IAAI,CAAC;IACvB,IAAGG,MAAM,CAACC,KAAK,CAACH,IAAI,CAAC,EAAC;MAClBb,KAAK,GAACA,KAAK,CAACiB,MAAM,CAACjB,KAAK,EAACO,OAAO,KAAG,CAAC,GAACK,IAAI,GAACA,IAAI,GAAC,GAAG,CAAC;MACnDL,OAAO,EAAE;IACb,CAAC,MAAI;MACD,KAAI,IAAIW,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,IAAI,EAACK,CAAC,EAAE,EAAC;QACnBlB,KAAK,GAACA,KAAK,CAACiB,MAAM,CAACjB,KAAK,EAACO,OAAO,KAAG,CAAC,GAAC,GAAG,GAAC,IAAI,CAAC;QAC9CA,OAAO,EAAE;MACb;IACJ;IACA,IAAGA,OAAO,KAAG,CAAC,EAAC;MACXP,KAAK,GAACA,KAAK,CAACiB,MAAM,CAACjB,KAAK,EAAC,oBAAoB,CAAC;MAC9CO,OAAO,GAAC,CAAC;IACb;IACAC,CAAC,EAAE;EACP;EACAC,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAClB,OAAOA,KAAK;AAChB;AAEA,SAASmB,UAAUA,CAAA,EACnB;EAAAC,EAAA;EACI,IAAI,CAACC,GAAG,EAACC,MAAM,CAAC,GAAE5B,QAAQ,CAACG,QAAQ,CAAC;EAEpC,IAAI,CAAC0B,KAAK,EAACC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EACnC8B,QAAQ,CAAC1B,SAAS,CAACuB,GAAG,CAAC,CAAC;EACxB,oBAAOzB,OAAA;IAAA6B,QAAA,eACH7B,OAAA;MAAA6B,QAAA,EAAIF;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV;AAACT,EAAA,CAVQD,UAAU;AAAAW,EAAA,GAAVX,UAAU;AAYnB,eAAeA,UAAU;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}